{
    "title": "@nextperm: Gerar a pr\u00f3xima permuta\u00e7\u00e3o",
    "description": "# Gerar a pr\u00f3xima permuta\u00e7\u00e3o\n\n- Entrada: Lista u de elementos orden\u00e1veis\n- Sa\u00edda: Pr\u00f3xima permuta\u00e7\u00e3o lexicogr\u00e1fica de u ou lan\u00e7ar exce\u00e7\u00e3o se n\u00e3o for poss\u00edvel.\n    - A pr\u00f3xima permuta\u00e7\u00e3o lexicogr\u00e1fica de uma lista u de elementos orden\u00e1veis \u00e9 obtida aplicando-se o seguinte algoritmo:\n        - (a) Obter o maior valor de \u00edndice i de u tal que u[i] < u[i + 1] (pode n\u00e3o existir! Neste caso deve-se disparar a exce\u00e7\u00e3o).\n        - (b) Obter o maior \u00edndice j de u, com j > i, tal que u[j] > u[i].\n        - (c) Trocar u[i] com u[j].\n        - (d) Reverter em u a sub-lista que se estende da posi\u00e7\u00e3o i + 1 at\u00e9 o final da lista.\n\n```hs\nnextPerm [] == []\nnextPerm [1] == [1]\nnextPerm [1,3,4] == [1,4,3]\nnextPerm [4,1,3,2] == [4,2,1,3]\nnextPerm [1,3,5,2] == [1,5,2,3]\n```\n\n## Ajuda\n\nSeja o seguinte exemplo:\n\n- `nextPerm [4,1,3,2] == [4,2,1,3]`\n- `i` ser\u00e1 no n\u00famero `1`\n- `j` ser\u00e1 no n\u00famero `2`, pois `2 > 1` e o \u00edndice do n\u00famero `2` \u00e9 maior que o \u00edndice do n\u00famero `3`.\n- Trocando o `2` e o `1` teremos: `[4,2,3,1]`\n- Agora invertemos de `i + 1` at\u00e9 o fim da lista obtendo `[4,2,1,3]`\n\n## Testes\n\n```txt\n>>>>>>>>\n[]\n========\n[]\n<<<<<<<<\n\n>>>>>>>>\n[1]\n========\n[1]\n<<<<<<<<\n\n>>>>>>>>\n[1,3,4]\n========\n[1,4,3]\n<<<<<<<<\n\n>>>>>>>>\n[4,1,3,2]\n========\n[4,2,1,3]\n<<<<<<<<\n\n>>>>>>>>\n[1,3,5,2]\n========\n[1,5,2,3]\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n[]\n======== EXPECT\n[]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1]\n======== EXPECT\n[1]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1,3,4]\n======== EXPECT\n[1,4,3]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[4,1,3,2]\n======== EXPECT\n[4,2,1,3]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1,3,5,2]\n======== EXPECT\n[1,5,2,3]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO [Int]\n    print $ nextPerm a\n",
                "type": "show"
            }
        ]
    }
}
