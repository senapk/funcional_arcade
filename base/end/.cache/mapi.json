{
    "title": "@end: Comandos at\u00e9 o end",
    "description": "# Comandos at\u00e9 o end\n\nLeia e processe v\u00e1rios comandos, um por linha at\u00e9 chegar no `end`.\n\nOs comandos podem ser\n\n- sum x y -> imprime a soma de dois inteiros x e y\n- half x -> imprime o valor float x dividido por 2 com duas casas decimais\n- end -> finaliza o loop\n\n## Testes\n\n```txt\n>>>>>>>>\nsum 4 5\nhalf 6.0\nsum 8 9\nhalf 7.0\nhalf 3.5\nend\n========\n9\n3.00\n17\n3.50\n1.75\n<<<<<<<<\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\nsum 4 5\nhalf 6.0\nsum 8 9\nhalf 7.0\nhalf 3.5\nend\n======== EXPECT\n9\n3.00\n17\n3.50\n1.75\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "import Data.List ( intercalate ) \nimport Text.Printf ( printf )\n\nmain :: IO ()\nmain = do\n    line_list <- takeWhile (/=\"end\") . lines <$> getContents\n    putStrLn $ intercalate \"\\n\" . map process $ line_list\n    \n",
                "type": "show"
            }
        ]
    }
}
