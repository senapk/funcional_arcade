{
    "title": "@greater: Sublista dos maiores que um valor",
    "description": "# Sublista dos maiores que um valor\n\n```hs\n--IN : N\u00famero x e uma lista u\n--OUT: Sublista de u cujos n\u00fameros sejam maiores que x\n--OBS: Fa\u00e7a usando filter e CList\nmaioresQue 10 [] == []\nmaioresQue 10 [11,9,12] == [11,12]\nmaioresQue 10 [4,6,30,3,15,3,10,7] == [30,15]\n```\n\n## Testes\n\n```txt\n>>>>>>>>\n10\n[]\n========\n[]\n<<<<<<<<\n\n>>>>>>>>\n10\n[11,9,12]\n========\n[11,12]\n<<<<<<<<\n\n>>>>>>>>\n10\n[4,6,30,3,15,3,10,7]\n========\n[30,15]\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n10\n[]\n======== EXPECT\n[]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n[11,9,12]\n======== EXPECT\n[11,12]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n[4,6,30,3,15,3,10,7]\n======== EXPECT\n[30,15]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO Int\n    b <- readLn :: IO [Int]\n    print $ maioresQue a b\n",
                "type": "show"
            }
        ]
    }
}
