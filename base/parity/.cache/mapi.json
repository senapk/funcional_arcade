{
    "title": "@parity: Calculando paridade simples",
    "description": "# Calculando paridade simples\n\n```hs\n--IN :  Lista u de valores booleanos\n--OUT: Se o total de Trues \u00e9 \u00edmpar ent\u00e3o retorne True e do contr\u00e1rio False\nparidade [] == False\nparidade [True,True,False] == False\nparidade [True,False,True,False,True] == True\nparidade [False,True,False] == True\n```\n\n## Testes\n\n```txt\n>>>>>>>>\n[]\n========\nFalse\n<<<<<<<<\n\n>>>>>>>>\n[True,True,False]\n========\nFalse\n<<<<<<<<\n\n>>>>>>>>\n[True,False,True,False,True]\n========\nTrue\n<<<<<<<<\n\n>>>>>>>>\n[False,True,False]\n========\nTrue\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n[]\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[True,True,False]\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[True,False,True,False,True]\n======== EXPECT\nTrue\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[False,True,False]\n======== EXPECT\nTrue\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO [Bool]\n    print $ paridade a\n",
                "type": "show"
            }
        ]
    }
}
