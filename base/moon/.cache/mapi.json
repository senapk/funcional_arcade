{
    "title": "@moon: Pedra na lua",
    "description": "# Pedra na lua\n\n## Motiva\u00e7\u00e3o\n\nV\u00e1rios competidores disputaram uma competi\u00e7\u00e3o interessante.\n\n- Eles tinham duas pedras para lan\u00e7ar.\n- Chamemos de pedra A e pedra B.\n- Eles tinham que arremessar ambas as pedras a pelo menos 10 metros de dist\u00e2ncia.\n- Se alguma das pedras ca\u00edssem abaixo de 10 metros, ele estaria desclassificado.\n- A pontua\u00e7\u00e3o obtida \u00e9 dada pela dist\u00e2ncia absoluta entre as pedras. Se uma pedra caiu a 12 metros e outra a 15 metros, ele fez 3 pontos.\n- Ganha o competidor que faz menos pontos.\n- O primeiro competidor tem n\u00famero \u00edndice 0.\n- Se houver empate nos pontos, ganha o competidor que tem menor \u00edndice.\n\n### Entrada\n\n- O n\u00famero N de competidores.\n- Dist\u00e2ncia das pedras A e B de cada competidor.\n\n### Saida\n\n- Se ningu\u00e9m ganhar o jogo, porque todos foram desclassificados, imprima \"sem ganhador\".\n\n## Exemplos\n\n```hs\nmain :: IO ()\nmain = do\n    print $ processa [\"8 11\", \"10 15\"] == \"1\"\n    print $ processa [\"9 12\", \"11 13\", \"10 11\"] == \"2\"\n    print $ processa [\"12 15\", \"16 14\", \"10 9\"] == \"1\"\n    print $ processa [\"12 15\", \"20 23\", \"10 9\", \"35 35\"] == \"3\"\n    print $ processa [\"10 8\", \"9 13\"] == \"sem ganhador\"\n    print $ processa [\"8 9\", \"12 7\"] == \"sem ganhador\"\n    print $ processa [\"10 9\", \"15 19\"] == \"1\"\n    print $ processa [\"9 8\", \"9 12\", \"12 15\", \"18 19\"] == \"3\"\n```\n\n## Testes\n\n```txt\n>>>>>>>>\n2\n8 11\n10 9\n========\nsem ganhador\n<<<<<<<<\n\n>>>>>>>>\n2\n8 11\n10 15\n========\n1\n<<<<<<<<\n\n>>>>>>>>\n3\n9 12\n11 13\n10 11\n========\n2\n<<<<<<<<\n\n>>>>>>>>\n3\n12 15\n16 14\n10 9\n========\n1\n<<<<<<<<\n\n>>>>>>>>\n4\n12 15\n20 23\n10 9\n35 35\n========\n3\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n2\n8 11\n10 9\n======== EXPECT\nsem ganhador\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n2\n8 11\n10 15\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n9 12\n11 13\n10 11\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n12 15\n16 14\n10 9\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n12 15\n20 23\n10 9\n35 35\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n2\n10 8\n9 13\n======== EXPECT\nsem ganhador\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n2\n8 9\n12 7\n======== EXPECT\nsem ganhador\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n2\n10 9\n15 19\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n3\n12 17\n14 11\n8 9\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n3\n9 12\n11 13\n12 13\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\n4\n9 8\n9 12\n12 9\n6 7\n======== EXPECT\nsem ganhador\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n4\n9 8\n9 12\n12 15\n6 7\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\n4\n9 8\n9 12\n12 15\n18 19\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "import Control.Monad (replicateM)\n\nmain :: IO ()\nmain = do\n    size <- readLn :: IO Int\n    vet <- replicateM size getLine -- [String]\n    let index = searchBest vet\n    if index == -1\n    then\n        putStrLn \"sem ganhador\"\n    else\n        print index\n",
                "type": "show"
            }
        ]
    }
}
