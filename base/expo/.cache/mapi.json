{
    "title": "@expo: REVIEW mudar para testes normais",
    "description": "# REVIEW mudar para testes normais\n\nVerifique quantas vezes um n\u00famero \u00e9 divis\u00edvel por outro.\n\nRetorne uma tupla com a quantidade de vezes e o valor final das divis\u00f5es.\n\nOrienta\u00e7\u00e3o: \n\n- Utilize o `iterate` para realizar o la\u00e7o. Seu elemento a ser iterado inicia em `(valor, 0)`. O iterate recebe uma fun\u00e7\u00e3o e UM valor e gera uma lista infinita de apli\u00e7\u00f5es da fun\u00e7\u00e3o sobre o valor.\n\n```hs\n>>> iterate not True\n[True,False,True,False...\n>>> iterate (+3) 42\n[42,45,48,51,54,57,60,63...\n```\n\n- A cada itera\u00e7\u00e3o, voc\u00ea gera uma nova divis\u00e3o e m\u00f3dulo. Voc\u00ea pode usar o operador `divMod` do prelude.\n- Realizando essa itera\u00e7\u00e3o com os valores 1000 e 2, `os 5 primeiros termos` seriam\n\n```txt\n[(1000,0),(500,0),(250,0),(125,0),(62,1)...]\n```\n\n- Observe que conseguimos os 3 primeiros termos com resto 0, o que significa que conseguimos dividir o 1000 por 2 `3 vezes`\n\n```txt\n[(1000,0),(500,0),(250,0),(125,0)]\n```\n\n```hs\nmain = do\n    print $ expoentes 7 2\n    print $ expoentes 4 2\n    print $ expoentes 8 2\n    print $ expoentes 24 2\n    print $ expoentes 1024 2\n    print $ expoentes 150 5\n```\n\n```txt\n>>>>>>>>\n========\n<<<<<<<<\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n======== EXPECT\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    print $ expoentes 7 2\n    print $ expoentes 4 2\n    print $ expoentes 8 2\n    print $ expoentes 24 2\n    print $ expoentes 1024 2\n    print $ expoentes 150 5\n",
                "type": "show"
            }
        ]
    }
}
