{
    "title": "@contains: Se existe um elemento na lista",
    "description": "# Se existe um elemento na lista\n\n```hs\n--IN : Lista u e valor x\n--OUT: Verdadeiro se x \u2208 u e falso do contr\u00e1rio\npertence 1 [] == False\npertence 1 [3] == False\npertence 3 [4] == False\npertence 1 [3,7,4,2] == False\npertence 2 [3,7,4,2] == True\npertence 3 [3,7,4,2] == True\npertence 7 [3,7,4,2] == True\n```\n\n## Guia\n\n- op\u00e7\u00e3o 1:\n  - utilize a fun\u00e7\u00e3o `elem`\n- op\u00e7\u00e3o 2:\n  - utilize a fun\u00e7\u00e3o filter ou listas de compreens\u00e3o e conte se ele ocorre\n- op\u00e7\u00e3o 3:\n  - crie a fun\u00e7\u00e3o recursiva\n    - se chegar ao fim da lista retorne false\n    - se encontrar o valor no head, retorne true\n    - se n\u00e3o \u00e9 o valor no head, chame a recurs\u00e3o para o resto da lista\n\n## Testes\n\n```txt\n>>>>>>>>\n1\n[]\n========\nFalse\n<<<<<<<<\n\n>>>>>>>>\n1\n[3]\n========\nFalse\n<<<<<<<<\n\n>>>>>>>>\n3\n[4]\n========\nFalse\n<<<<<<<<\n\n>>>>>>>>\n1\n[3,7,4,2]\n========\nFalse\n<<<<<<<<\n\n>>>>>>>>\n2\n[3,7,4,2]\n========\nTrue\n<<<<<<<<\n\n>>>>>>>>\n3\n[3,7,4,2]\n========\nTrue\n<<<<<<<<\n\n>>>>>>>>\n7\n[3,7,4,2]\n========\nTrue\n<<<<<<<<\n\n```",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n1\n[]\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n[3]\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n[4]\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n[3,7,4,2]\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n2\n[3,7,4,2]\n======== EXPECT\nTrue\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n[3,7,4,2]\n======== EXPECT\nTrue\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n7\n[3,7,4,2]\n======== EXPECT\nTrue\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO Int\n    b <- readLn :: IO [Int]\n    print $ pertence a b\n",
                "type": "show"
            }
        ]
    }
}
