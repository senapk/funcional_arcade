{
    "title": "@perfect: \u00c9 quadrado perfeito",
    "description": "# \u00c9 quadrado perfeito\n\n- IN : N\u00famero inteiro positivo, n\n- OUT: Verdadeiro se n for um quadrado perfeito e falso do contr\u00e1rio (Um *quadrado perfeito* \u00e9 um n\u00famero inteiro cuja raiz quadrada \u00e9 tamb\u00e9m um n\u00famero inteiro). N\u00e3o utilizar operadores ou fun\u00e7\u00f5es que retornem n\u00fameros reais.\n\n```hs\nquadperf 12 == False\nquadperf 16 == True\nquadperf 25 == True\nquadperf 5 == False\n```\n\n## Ajuda\n\nV\u00e1 aumentando `i`, enquanto `i * i` for ou igual a `n`.\n\n## Testes\n\n```txt\n>>>>>>>>\n12\n========\nFalse\n<<<<<<<<\n\n>>>>>>>>\n16\n========\nTrue\n<<<<<<<<\n\n>>>>>>>>\n25\n========\nTrue\n<<<<<<<<\n\n>>>>>>>>\n5\n========\nFalse\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n12\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n16\n======== EXPECT\nTrue\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n25\n======== EXPECT\nTrue\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO Int\n    print $ quadperf a\n",
                "type": "show"
            }
        ]
    }
}
