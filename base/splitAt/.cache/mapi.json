{
    "title": "@splitAt: Cortar uma lista em duas partes",
    "description": "# Cortar uma lista em duas partes\n\n```hs\n--IN :Lista u e um natural n\n--OUT: Tupla de duas listas, (A,B), onde A \u00e9 formada pelas n primeiras chaves de u e B pelos elementos restantes}\ndivide [1,2,3,4] 0 == ([],[1,2,3,4])\ndivide [1,2,3,4] 1 == ([1],[2,3,4])\ndivide [1,2,3,4] 2 == ([1,2],[3,4])\ndivide [1,2,3,4] 3 == ([1,2,3],[4])\ndivide [1,2,3,4] 4 == ([1,2,3,4],[])\n```\n\n## Guia\n\n- Essa fun\u00e7\u00e3o \u00e9 equivalente a `splitAt` do Haskell.\n\n## Testes\n\n```txt\n>>>>>>>>\n[1,2,3,4]\n0\n========\n([],[1,2,3,4])\n<<<<<<<<\n\n>>>>>>>>\n[1,2,3,4]\n1\n========\n([1],[2,3,4])\n<<<<<<<<\n\n>>>>>>>>\n[1,2,3,4]\n2\n========\n([1,2],[3,4])\n<<<<<<<<\n\n>>>>>>>>\n[1,2,3,4]\n3\n========\n([1,2,3],[4])\n<<<<<<<<\n\n>>>>>>>>\n[1,2,3,4]\n4\n========\n([1,2,3,4],[])\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n[1,2,3,4]\n0\n======== EXPECT\n([],[1,2,3,4])\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1,2,3,4]\n1\n======== EXPECT\n([1],[2,3,4])\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1,2,3,4]\n2\n======== EXPECT\n([1,2],[3,4])\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1,2,3,4]\n3\n======== EXPECT\n([1,2,3],[4])\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1,2,3,4]\n4\n======== EXPECT\n([1,2,3,4],[])\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO [Int]\n    b <- readLn :: IO Int\n    print $ divide a b\n",
                "type": "show"
            }
        ]
    }
}
