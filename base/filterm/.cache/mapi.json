{
    "title": "@filterm: Filtro de Maybe",
    "description": "# Filtro de Maybe\n\nDefina as fun\u00e7\u00e3o\n\n```hs\nfilterMaybe :: [Maybe Int] -> [Int]\n```\n\nDado um vetor de `Maybe [Int]`, filtre apenas os valores que s\u00e3o formados por Just\n\n```hs\nfilterMaybe [Just 5,Nothing,Just 7,Nothing] == [5, 7]\n```\n\n```hs\ncountNothing [Maybe Int] -> Int\n```\n\n## Testes\n\n```txt\n>>>>>>>>\n[Just 5,Nothing,Just 7,Nothing]\n========\n[5, 7]\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n[Just 5,Nothing,Just 7,Nothing]\n======== EXPECT\n[5, 7]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO [Bool]\n    b <- readLn :: IO Bool\n    c <- readLn :: IO Bool\n    print $ filterMaybe a b c\n",
                "type": "show"
            }
        ]
    }
}
