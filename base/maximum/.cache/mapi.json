{
    "title": "@maximum: Maior valor",
    "description": "# Maior valor\n\n```hs\n--IN : Lista u\n--OUT: O maior valor de u\n--OBS: N\u00e3o usar fun\u00e7\u00e3o max ou maximum\nmaior [4] == 4\nmaior [5,1] == 5\nmaior [5,7] == 7\nmaior [1,2,7,1,5] == 7\nmaior [1,2,3,1,5] == 5\n```\n\n## Guia\n\n- Se s\u00f3 existe um elemento, ele \u00e9 o maior\n- Se existe mais de um\n  - use where pra calcular o m\u00e1ximo do resto\n  - use o if para retornar o maior ente o head e o resto\n\n## Testes\n\n```txt\n>>>>>>>>\n[4]\n========\n4\n<<<<<<<<\n\n>>>>>>>>\n[5,1]\n========\n5\n<<<<<<<<\n\n>>>>>>>>\n[5,7]\n========\n7\n<<<<<<<<\n\n>>>>>>>>\n[1,2,7,1,5]\n========\n7\n<<<<<<<<\n\n>>>>>>>>\n[1,2,3,1,5]\n========\n5\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n[4]\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[5,1]\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[5,7]\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1,2,7,1,5]\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[1,2,3,1,5]\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO [Int]\n    print $ maior a\n",
                "type": "show"
            }
        ]
    }
}
