{
    "title": "@index: Acesso indexado",
    "description": "# Acesso indexado\n\n```hs\n--IN : Lista xs e um natural n\n--OUT: N-\u00e9simo termo de xs, processe os n\u00fameros negativos para contar a partir do fim\nelemento 2 [2,7,3,9] == 3\nelemento 0 [2,7,3,9] == 2\nelemento -1 [2,7,3,9] == 9\nelemento -2 [2,7,3,9] == 3\n```\n\n## Guia\n\n- Adapte o valor negativo utilizando `let` ou `where`.\n- Se o valor for negativo, some ele mais o tamanho do vetor para obter o valor positivo correto.\n- Utilize o operador de \u00edndice `!!`.\n- Tente refazer tamb\u00e9m utilizando recurs\u00e3o.\n  - ap\u00f3s consertar o \u00edndice se for negativo, invoque uma fun\u00e7\u00e3o recursiva\n  - passe o vetor e o \u00edndice, se o \u00edndice for 0, retorne o head\n  - se n\u00e3o, chame a recurs\u00e3o para o rabo passando \u00edndice -1\n\n## Testes\n\n```txt\n>>>>>>>>\n2\n[2,7,3,9]\n========\n3\n<<<<<<<<\n\n>>>>>>>>\n0\n[2,7,3,9]\n========\n2\n<<<<<<<<\n\n>>>>>>>>\n-1\n[2,7,3,9]\n========\n9\n<<<<<<<<\n\n>>>>>>>>\n-2\n[2,7,3,9]\n========\n3\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n2\n[2,7,3,9]\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n0\n[2,7,3,9]\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n-1\n[2,7,3,9]\n======== EXPECT\n9\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n-2\n[2,7,3,9]\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO Int\n    b <- readLn :: IO [Int]\n    print $ elemento a b\n",
                "type": "show"
            }
        ]
    }
}
