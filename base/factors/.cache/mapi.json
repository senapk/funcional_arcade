{
    "title": "@factors: Fatores de um n\u00famero",
    "description": "# Fatores de um n\u00famero\n\n```hs\n--IN : N\u00famero n inteiro positivo\n--OUT: Lista de tuplas (f, p) que representam os\n--fatores primos de n onde f denota o fator propriamente dito e p seu respectivo expoente. (Todo n\u00famero x, tal que x pertence aos N, pode ser reescrito como o\n--produto de pot\u00eancias de bases primas e expoentes\n--naturais. Por exemplo, o n\u00famero 3361743 pode ser\n--reescrito na forma,\n--3361743 = 3^4 * 7^3 * 11^2\n--Os n\u00fameros 3, 7 e 11 s\u00e3o denominados fatores primos de 3361743 e 4, 3 e 2 seus respectivas expoentes.)\nfactors 36 == [(2,2),(3,2)]\nfactors 50 == [(2,1),(5,2)]\nfactors 78 == [(2,1),(3,1),(13,1)]\nfactors 60 == [(2,2),(3,1),(5,1)]\nfactors 3361743 == [(3,4),(7,3),(11,2)]\n```\n\n## Ajuda\n\nFa\u00e7a as fun\u00e7\u00f5es para:\n\n- verificar se um n\u00famero \u00e9 primo\n- gerar todos os primos de 1 at\u00e9 n\n- dado um n\u00famero x, qual a pot\u00eancia de x em n: \n  - Exemplo: `expoente 24 2 == 3` pois consigo dividir o 24 por 2 tr\u00eas vezes.\n\n## Testes\n\n```txt\n>>>>>>>>\n36\n========\n[(2,2),(3,2)]\n<<<<<<<<\n\n>>>>>>>>\n50\n========\n[(2,1),(5,2)]\n<<<<<<<<\n\n>>>>>>>>\n78\n========\n[(2,1),(3,1),(13,1)]\n<<<<<<<<\n\n>>>>>>>>\n60\n========\n[(2,2),(3,1),(5,1)]\n<<<<<<<<\n\n>>>>>>>>\n3361743\n========\n[(3,4),(7,3),(11,2)]\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n36\n======== EXPECT\n[(2,2),(3,2)]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n50\n======== EXPECT\n[(2,1),(5,2)]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n78\n======== EXPECT\n[(2,1),(3,1),(13,1)]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n60\n======== EXPECT\n[(2,2),(3,1),(5,1)]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3361743\n======== EXPECT\n[(3,4),(7,3),(11,2)]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO Int\n    print $ factors a\n",
                "type": "show"
            }
        ]
    }
}
