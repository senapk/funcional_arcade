{
    "title": "@tv: Comprando TV parcelado",
    "description": "# Comprando TV parcelado\n\nAlu\u00edzio quer comprar uma televis\u00e3o parcelada. Ele tem X reais por m\u00eas dispon\u00edveis para pagar a televis\u00e3o. No parcelamento, quanto mais parcelas, maior o juros que usa a seguinte regra.\n\n- 1 vez sem juros\n- 2 vezes com juros de 5%\n- 3 vezes com juros de 10%\n- 4 vezes com juros de 15%\n- 5 vezes com juros de 20%\n- 6 vezes com juros de 25%\n- 7 vezes com juros de 30%\n- 8 vezes com juros de 35%\n- 9 vezes com juros de 40%\n- 10 vezes com juros de 45%\n\nDado o valor da televis\u00e3o e a quantidade de parcelas, um por linha, calcule o valor da parcela e o valor total que Alu\u00edzio vai pagar. Imprima a sa\u00edda conforme o exemplo a seguir.\n\n```txt\n>>>>>>>>\n100\n1\n========\n100.00\n100.00\n<<<<<<<<\n\n>>>>>>>>\n100\n2\n========\n52.50\n105.00\n<<<<<<<<\n\n>>>>>>>>\n100\n10\n========\n14.50\n145.00\n<<<<<<<<\n\n>>>>>>>>\n102\n3\n========\n37.40\n112.20\n<<<<<<<<\n\n>>>>>>>>\n52\n4\n========\n14.95\n59.80\n<<<<<<<<\n\n>>>>>>>>\n100\n5\n========\n24.00\n120.00\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n100\n1\n======== EXPECT\n100.00\n100.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n100\n2\n======== EXPECT\n52.50\n105.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n100\n10\n======== EXPECT\n14.50\n145.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n102\n3\n======== EXPECT\n37.40\n112.20\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n52\n4\n======== EXPECT\n14.95\n59.80\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n100\n5\n======== EXPECT\n24.00\n120.00\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "import Text.Printf\nmain :: IO ()\nmain = do\n    value <- readLn :: IO Float\n    times <- readLn :: IO Float\n    let total = calc value times\n    printf \"%.2f\\n\" (total / times :: Float)\n    printf \"%.2f\\n\" (total :: Float)\n",
                "type": "show"
            }
        ]
    }
}
