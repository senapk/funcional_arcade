{
    "title": "@unique: Valor ocorre sem repeti\u00e7\u00e3o",
    "description": "# Valor ocorre sem repeti\u00e7\u00e3o\n\n```hs\n--IN : Lista u e valor x\n--OUT: True se x ocorre exatamente uma vez em u e false do contr\u00e1rio\n\nunico 2 [2] == True\nunico 2 [3,1] == False\nunico 2 [1,2,3,2] == False\n```\n\n## Guia\n\n- Fa\u00e7a utilizando filter\n  - Voc\u00ea pode utilizar a fun\u00e7\u00e3o `length`\n  - filtre quem for igual ao valor e veja se aparece uma s\u00f3 vez\n- Fa\u00e7a utilizando recurs\u00e3o\n  - se y for igual a head return True\n\n## Testes\n\n```txt\n>>>>>>>>\n2\n[2]\n========\nTrue\n<<<<<<<<\n\n>>>>>>>>\n2\n[3,1]\n========\nFalse\n<<<<<<<<\n\n>>>>>>>>\n2\n[1,2,3,2]\n========\nFalse\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n2\n[2]\n======== EXPECT\nTrue\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n2\n[3,1]\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n2\n[1,2,3,2]\n======== EXPECT\nFalse\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    a <- readLn :: IO Int\n    b <- readLn :: IO [Int]\n    print $ unico a b\n",
                "type": "show"
            }
        ]
    }
}
