{
    "title": "@partition: Partir por predicado",
    "description": "# Partir por predicado\n\n- IN : Lista de inteiros positivos, u\n- OUT: Tupla de duas listas, (A,B), onde A e B s\u00e3o respectivamente compostos pelos n\u00fameros que passam no predicado e os que n\u00e3o passam\n\n- Teste a fun\u00e7\u00e3o processando a lista recebida com duas fun\u00e7\u00f5es (odd) e (<5).\n\n```hs\nsplitints odd [1,2,3,4,5,6,7] == ([1,3,5,7],[2,4,6])\nsplitints (<5) [2,4,6,1,1,7] == ([2,4,1,1],[6,7])\n```\n\n## Testes\n\n```txt\n>>>>>>>>\n[1,2,3,4,5,6,7]\n========\nodd ([1,3,5,7],[2,4,6])\n(<5) ([1,2,3,4],[5,6,7])\n<<<<<<<<\n\n>>>>>>>>\n[2,4,6,1,1,7]\n========\nodd ([1,1,7],[2,4,6])\n(<5) ([2,4,1,1],[6,7])\n<<<<<<<<\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n[1,2,3,4,5,6,7]\n======== EXPECT\nodd ([1,3,5,7],[2,4,6])\n(<5) ([1,2,3,4],[5,6,7])\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[2,4,6,1,1,7]\n======== EXPECT\nodd ([1,1,7],[2,4,6])\n(<5) ([2,4,1,1],[6,7])\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "hs": [
            {
                "name": "Main.hs",
                "contents": "main :: IO ()\nmain = do\n    list <- readLn :: IO [Int]\n    putStrLn $ \"odd \" ++ show (splitints odd list)\n    putStrLn $ \"(<5) \" ++ show (splitints (<5) list)\n",
                "type": "show"
            }
        ]
    }
}
